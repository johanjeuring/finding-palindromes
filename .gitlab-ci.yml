# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

default:
  image: "yuralis/haskell_node:0.0.1"
  before_script:
    - cabal update
    - cabal --store-dir=./cabal-store build palindromes.cabal --only-dependencies

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

stages: # List of stages for jobs, and their order of execution
  - build
  - test

build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - cabal --store-dir=./cabal-store build lib:palindromes
  cache:
    key: backend-build
    paths:
      - cabal-store/
      - dist-newstyle/

unit-test-job: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  script:
    - cabal --store-dir=./cabal-store test
  cache:
    key: backend-build
    paths:
      - cabal-store/
      - dist-newstyle/

command-line-test-job:
  stage: test
  script:
    - cabal --store-dir=./cabal-store run palindromes -- examples/palindromes/Damnitimmad.txt -Q
  cache:
    key: backend-build
    paths:
      - cabal-store/
      - dist-newstyle/
